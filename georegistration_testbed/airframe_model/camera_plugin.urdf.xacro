<?xml version="1.0"?>
<robot name="camera_plugin" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="M_PI" value="3.1415926535897931" />
    
    <!-- horizontal and vertical image resolution (pixels) -->
    <xacro:property name="horz_res" value="1920" />
    <xacro:property name="vert_res" value="1080" />

    <!-- horizontal field of view (degrees) -->
    <xacro:property name="horz_fov" value="85" />

    <xacro:macro name="camera_plugin_macro" 
                 params="
                        name
                        namespace
                        parent_link
                        xyz
                        rpy
                        "
    >

        <link name="${name}_camera_link"/>
        <joint name="${name}_camera_joint" type="fixed">
            <parent link="${parent_link}"/>
            <child link="${name}_camera_link"/>
            <!--<origin xyz="0.0 0.0 -${0.03*body_height}" rpy="0 ${M_PI/2} 0"/>-->
            <origin xyz="${xyz}" rpy="${rpy}"/>
        </joint>    

        <!-- Point the optical gimbal relative to it's default pose in this joint -->
        <!-- x = "north" y = "west" z = "up"        -->
        <joint name="${name}_gimbal" type="fixed">
            <parent link="${name}_camera_link"/>
            <child link="${name}_gimbal_frame"/>
            <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
        </joint>
        <link name="${name}_gimbal_frame"/>

        <!-- Convert to optical coordinate frame    -->
        <!-- x = "east" y = "down" z = "north"      -->
        <joint name="${name}_gimbal_to_optical" type="fixed">
            <parent link="${name}_gimbal_frame"/>
            <child link="${name}_optical_frame"/>
            <!-- <origin rpy="${-M_PI/2} 0 ${-M_PI/2}" xyz="0.0 0.0 0.0"/> -->
            <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
        </joint>           
        <link name="${name}_optical_frame">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh  scale="1 1 1" filename="package://georegistration_testbed/airframe_model/meshes/asus_xtion_pro_camera.dae"/>
                </geometry>
            </collision>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh  scale="1 1 1" filename="package://georegistration_testbed/airframe_model/meshes/asus_xtion_pro_camera.dae"/>
                </geometry>
            </visual>

            <inertial>
                <mass value="0.001" />
                <origin xyz="0 0 0" rpy="0 0 0" />
                <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001" />
            </inertial>
        </link>
        
        <gazebo reference="${name}_gimbal_frame">
            <sensor type="camera" name="camera_camera_sensor">
                <update_rate>30.0</update_rate>
                <camera>
                    <pose>0.0 0.0 0.0 0 0 0</pose>
                    <horizontal_fov>${horz_fov * M_PI/180.0}</horizontal_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>${horz_res}</width>
                        <height>${vert_res}</height>
                    </image>
                    <clip>
                        <near>0.01</near>
                        <far>8000</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.  
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>          
                </camera>

                <plugin name="${name}_camera_plugin" filename="libgazebo_ros_camera.so">
                    <robotNamespace>${namespace}</robotNamespace>
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>camera/${name}</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${name}_gimbal_frame</frameName>
                    <CxPrime>${horz_res/2 + 0.5}</CxPrime>
                    <Cx>${horz_res/2 + 0.5}</Cx>
                    <Cy>${vert_res/2 + 0.5}</Cy>
                    <!-- Determined by field of view horizontal_fov above -->
                    <!-- <focalLength>320.000101</focalLength> -->
                    <hackBaseline>0.0</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

</robot>
